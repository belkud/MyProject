body {
    background: lightblue;
    /* background-image: url('public/cloud.png'); */
    /* background-size:contain; */
    /* animation: cloud 10s linear infinite; */
    
}

                                        /*! ТЕМА С ИЗОБРАЖЕНИЯМИ! */
#car {
    width: 250px; /* ширина */
    border: 2px solid red;
    border-radius: 10px 60px; /* скругляем углы */
    box-shadow: 0px 0px 10px red; /* тень от блока (осьХ, осьУ, размытие и цвет) */
    transition: 1s;
    position: absolute;
    margin-bottom: 250px;
}
#car:hover {
    margin-top: -10px;
    margin-left: 10px;
    box-shadow: -20px 20px 10px red;
}





  
.btn { /* стилизуем кнопки через class */
    background-color: red;
    color: aliceblue;
    width: 150px;
    border-radius: 5px;
}
    
  .btn1:hover {

                                        /*! ТЕМА С АНИМАЦИЯМИ! */

    /*! 1. СВОЙСТВО TRANSITION */
  
    /*! transition состоит из 4-х отдельных свойств:  */
    /* - transition-property -изменяемое свойство */
    /* - transition-duration - длительность перехода*/
    /* - transition-timing-function, - временная функция */
    /* - transition delay - время задержки перехода  */
    
    
    /*! Все свойства указывать необязательно */
    /* варианты написания: *
    /
    /* transition:  1s; */
    /* длительность перехода */
    
    /* transition:  1s  2s; */
    /* первая цифра длительность, вторая задержка */
  
    /* transition: 1s 2s ease;  */
    /* первая цифра длительность, вторая задержка, третья временная функция */
  
    /* для временной функции можем использовать кубик бейзер */
    /*! https://cubic-bezier.com/#.17,.67,.83,.67/ */
  
    transition:  1s;
    background-color: blue;
    font-size: 50px;
  }
  
  
  .btn2 {
  
      /*! 2. СВОЙСТВО TRANSFORM */
  
  transform: scale(1.2);  /* Масштабирует элемент */
  transform: rotate(45deg); /* Поворачивает */
  transform: skew(30deg); /* Наклоняет */
  transform: translate(0px); /* Смещает */
  
  /* transform: rotate(45deg) scale(1.5); */
  /* Задание нескольких параметров одновременно */
  
  /* transform-origin: 100% 100%; (первая цифра ось Х, вторая ось У)*/
  /*! можем смещать центр нашего с вами блока */
      
  /* в transform положение элемента остается неизменным, при этом мы можем менять его свойства  */
          
  }
    
  .btn2:hover {
      transform: translate(90%, -85%);
      transition: 1s;
    }
  
  
         /*! 3. СВОЙСТВО ANIMATION */
    
  /*! animation состоит из нескольких свойств:  */
  
  /* - animation-name - имя анимации */
  /* - animation-duration - длительность перехода*/
  /* - animation-timing-function, - временная функция */
  /* - animation delay - время задержки перехода  */
  /* (есть еще другие свойства) */
  
    .btn3 {
  /* можно записывать свойства как по отдельности так и в одну строчку */
  animation: anim3 3s ease 12s;

  /* простой вариант записи анимации (имя и её время) */
  /* animation: anim3 1s; */
  }
  
  
  
    @keyframes anim3 {   /* создание анимации */
      from { /* начало анимации */
        margin-left: 0px;
      }
      to {  /* конец анимации */
        margin-left: 160px;
      }
      
    }
    

    

    /*! Анимации */

/*! Задание с воротами */

#container3 {
    margin-top: 50px;
    perspective: 800px; /* глубина блока (для открытия ворот во внутрь блока) */
    width: 500px;
}
#hello {
    position: absolute;
    margin-left: 130px;
    margin-top: 30px;
    z-index: -1;
}

#left, #right {
    display: inline-block;
    width: 150px;
    height: 100px;
    background-color: purple;
    border: 1px solid red;
}
#left{
    transform-origin: 0%;
}
#right{
    transform-origin: 100%;
}
#container3:hover>#left {
    transition: 2s;
    transform: rotateY(27deg);
    
}
#container3:hover #right {
    transition: 2s;
    transform: rotateY(-27deg);
    
}
/*! Конец задания с воротами */




  /*! Реализовать html-страницу с несколькими блоками текст + картинка */
  .cat, .dog {
    border: 1px solid red;
    width: 250px;
    height: 100px;
    margin: 0px;
    transition: 1s;
    margin-top: 0px;
}


.text {
    position: absolute;
    width: 100px;
    transform: translate(90px, -70px);
    color: red;
    font-size: 2em;
}

#container5 {
    margin-top: 50px;
    display: flex;
    flex-wrap: wrap;
    width: 504px;
    height: 313px;
}

#container5>div {
    overflow: hidden !important;
}
.cat:hover, .dog:hover{
    transform: scale(1.25);
    transition: 1s;
    padding-bottom: 0px !important;
    /* transform:rotateX(90deg); */
}

#container5>div:hover {
    filter: grayscale(.9);
}
/*! Конец задания */



/*! Задание с прогресс баром (двигающийся квадратик) */
#container { 
    border: 2px solid orange;
    height: 40px;
    width: 200px;
}

#square {  /* двигающийся квадрат */
    background: red;
    width: 40px;
    height: 40px;
    position: absolute;
    animation: anim 3s linear 1s infinite; /* название анимации, её продолжительность  */
}

@keyframes anim {   /* создание анимации */
    from { /* начало анимации */
        margin-left: 0px;
    }
    to {  /* конец анимации */
        margin-left: 160px;
    }
    
}
/*! Конец задания с прогресс баром */



/*! Задание с сердцем */
#heart {
    width: 150px;
    transition: 1s;
    position: absolute;
    z-index: -100;
    filter: grayscale(1) ;  /* filter отлично работает с изображениями */
}

#heart:hover {
    filter: grayscale(0);
    width: 250px;
}
/*! Конец задания с сердцем */






/*! задание с летающими предметами */
#container2 {
    border: 2px solid red;
    height: 500px;
    margin-top: 150px;
}

#pencil {
    width: 150px;
    margin-top: 300px;
    position: absolute;
    animation: movePencil 2s forwards ;
}

@keyframes movePencil {
    from {
        margin-top: 300px;
        rotate: 0deg;
    }
    to {
        margin-top: 0px;
        rotate: 30deg;
    }    
}
/*! Конец задания с летающими предметами */




  
  /*! Задание с часами */
  
  /* делаем окружность */
  #clock {
    height: 50px; width: 50px;
    margin-bottom: 100px;
    margin-top: 100px;
    border: 2px solid red;
    width: 300px;
    height: 300px;
    border-radius: 50%;
  }
  
/* расположение цифр */
  #clock>div {
      /* background-color: red; */
      width: 30px;
    height: 30px;
    border-radius: 50%;
    position: absolute;
    display: flex;
    align-items: center;
    justify-content: center;
    
}

/* стрелки */
#smallArrow {
  width: 100px !important;
  height: 5px !important;
  background-color: orange;
  margin-top: 150px;
  margin-left: 150px;
  transform-origin: 0px;
  animation: rotation 180s linear infinite;
}

#bigArrow {
  width: 120px !important;
  height: 3px !important;
  background-color: red;
  margin-top: 150px;
  margin-left: 150px;
  transform-origin: 0px;
  animation: rotation 60s linear infinite;
}

/* анимация для стрелок */
@keyframes rotation {
    from{
        
    }
    to {
        rotate: 360deg;
    }
}

/*! Конец задания с часами */









#callToMe {
    display: inline;
    background-color: blue;
    color: white;
    border: 2px solid transparent;
    width: 120px;
    /* border-radius: 50%;  используется чтобы сделать круг из квадрата */
    border-radius: 5px; /* скругляет углы */
    padding: 5px; /* внутренний отступ */
    opacity: 1; /* прозрачность, шкала от 0 до 1 */
    cursor: pointer; /* изменение курсора */
    transition: 1s; /* длительность анимации */
    /* transition-delay: 1s; время задержки */
    margin-bottom: 50px;



    /* transition-delay: 0s; время задержки анимации */
    /* transition-property: color ;
    transition-timing-function: ;
    transition-delay: ; */
    /* transition-duration: 10s ; */

}

#callToMe:hover {  /* действие при нажатие мышки */

    background-color: red;
}

/* #callToMe:hover { */
    
/* } */






#textId {
    /* id мы обязательно пишем через '#' */
    background: linear-gradient(blue, rgb(6, 130, 25));
    text-align: center;
    color: red;
    /* width: 200px; */
    transition: 1s;
}


#textId:hover { /* :hover - изменяет стиль при наведении мышки */
    color: yellow;
    transition: 1s;
}


.changeDiv { /* class мы обязательно пишем через '.' */
    color: green;
    margin-top: 20px; /* верхний отступ */
    margin-bottom: 10px; /* нижний отступ */
    text-decoration: underline;  /* подчеркивание текста */
}


/*! задание с картами */
.card_red {
    color: red; /* цвет шрифта */
    background-color: lightgrey; /* цвет фона */
    display: inline-block;    /* блочное или строчное отображение  */
    width: 37px; /* ширина */
    padding: 10px;  /* внутренний отступ */
    margin: 2px;  /* внешний отступ */
    font-size: 25px;  /* размер шрифта */
}

.card_black {
    color: black;
    background-color: lightgrey;
    width: 38px;
    display: inline-block;
    font-size: 25px;
    padding: 10px;
    margin: 2px;
}

/*! конец задания */







#spanId {
    color: rgb(81, 17, 141);
    background-color: yellow;
}



dt {
    background-color: gray;
    width: 120px;
    text-align: center;  /* выравние текста по середине блока */
    margin: auto; /* выравние блока по середине страницы */
}






#fruit_list {
    background-color: pink;
    padding: 20px;
    font-weight: bold;
    list-style-position: inside;
}

#fruit_list>li {
    background-color: rgb(238, 147, 163);
    border: 2px solid rgb(209, 212, 21);
    margin-top: 10px;
    padding: 10px;
    /* width: 65px; */
    /* text-align: center; */
}
.background {
    background-color: rgb(169, 69, 86);
    padding: 10px;
}




#pseudo_list>li {
    list-style-type: none;
    font-size: 24px; /* размер шрифта */
    font-style: italic; /* курсивный текст */
    background-color: gainsboro;
    color: red;
}



/* Псевдоэлемент ::before используется ДО тега */
/* Псевдоэлемент ::after используется ПОСЛЕ тега */

#pseudo_list li::before {
    content: '> before ';
    color: black;
}

#pseudo_list li::after {
    content: ' > after ';
    color: green;
}





#dog_img {
    border: 5px solid blue;
    padding: 10px;
    margin: 50px;
    margin-left: -10px;
}



#lorem_text {
    width: 250px;
    border: 5px solid yellow;
    /* граница, параметры: толщина, вид границы, цвет */
    border-bottom: 5px dashed red;
    border-top: 5px double blue;
    padding-bottom: 25px;
    margin: 20px; /* внешний отступ (отступ между элементами) */
    margin-left: 100px;
    margin-top: 2em;
    background-color: gray;
    padding: 15px; /* внутренний отступ (отступ в самом элементе) */
    padding-left: 25px;
    padding-right: 5px;
    transition: 1s; /* длительность анимации */
}


#lorem_text:hover {
    box-shadow: 10px 10px 10px red;

}



#winter {
    top: 100px;
    color: blue;
    /* writing-mode: vertical-lr; */
}

#winter>ul>li {
    list-style-image: url(public/arrow_16.png);
}

#spring {
    color: orange;
}




